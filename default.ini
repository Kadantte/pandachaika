[cookies]
# Log into exhentai on your browser, check all the cookies for it, and paste their keys, values here.
# uconfig one is necessary if you want filters on every request.
# Also archive download must be set to autodownload, autoaccept.
ipb_member_id = 
ipb_pass_hash = 
yay = 
uconfig = 

[nhentai_cookies]
# Session cookie for nhentai. Enables torrent downloads.
# sessionid = 

[requests_headers]
# Mask every request with this user-agent.
# user-agent = Mozilla/5.0 (Windows NT 6.3; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0

[general]
# db_engine to use. sqlite, mysql or postgresql are possible.
db_engine = sqlite
# When walking folders, only add as new files the ones that fit this filter.
filename_filter = *.zip
# Django secret key, needed.
django_secret_key =
# Enable Django debug mode, that will be more verbose in case of something going wrong.
django_debug_mode = yes
# API key, that will be applied to the JSON server, JSON view, and userscript.
apikey = pandaviewer
# How torrent downloads are handled. remote means file is downloaded on a remote server, so the file must be downloaded via FTP from that server.
# local_copy, local_move means files will be copied or moved instead of FTP downloading.
download_handler = local_copy
# Wait timer used for most request. A value that should not get you banned is 6 seconds. Lower than that is risky.
wait_timer = 6
# When crawling the home pages, stop at limit page number.
stop_page_number = 5
# Start the timed downloader on startup.
timed_downloader_startup = no
# Reload the server when it detects file changes (CherryPy feature).
cherrypy_auto_restart = yes
# Auto discard galleries that contain these tags. For new downloads and matches.
discardtags = language:thai,language:chinese,language:korean,language:french,language:spanish,language:italian,language:hungarian,language:portuguese,language:polish,language:russian,language:vietnamese

[downloaders]
# List of possible downloaders to use. Negative values disable that particular downloader.
# Positive values are sorted ascending in their use, so if the first one fails, the next one will try to download.
# Warning: Some of them might be outdated.
pandaarchive = 4
pandatorrent = 3
pandahath = -2
pandainfo = -1
nhentaitorrent = -1
fakkuinfo = 1
# Pandahath doesn't work anymore, since it was disabled from g/ex's part.

[autochecker]
# Gallery autodownloader, if page provided finds filters based on title and tags.
enable = no
startup = no
enable_titles = no
titles = comic magazine,manga issue 2
enable_discard_tags = yes
discard_tags = rewrite
enable_tags = no
pages = https://exhentai.org,https://g.e-hentai.org
cycle_timer = 2

[twitterchecker]
# Twitter parser info
enable = no
startup = no
cycle_timer = 4
token =
token_secret =
consumer_key =
consumer_secret =

[pushover]
# Pushover notifications on matching.
enable = no
user_key =
token =

[allowed]
# If set to yes, galleries with the tag "replaced" will be skipped and marked as skipped.
dont_dl_replaced = no
# If when downloading a gallery, a Parent gallery is found, delete that parent gallery (file, archive entry, gallery entry).  Depends on crawl_gallery_page
delete_parent_gallery = no
# If set to yes, galleries marked as failed that are added again to download will be processed.
retryfailed = no
# If set to yes, only galleries that are not resized in their hath format will be processed with this downloader.
hath_not_resized_only = yes
# If set to yes, galleries that were already added will be processed if added again.
replace_metadata = no
# If set to yes, it will enable other features that are only possible by crawling the webpage, like delete_parent_gallery and get_newer_gallery. Increases pageviews.
crawl_gallery_page = no
# If crawl_gallery_page is enabled, and get_newer_gallery is too, this will jump from a gallery that was replaced to the new gallery.
get_newer_gallery = yes
# If set to yes, torrent downloads using the .rar format will be automatically transformed to .zip file. Requires the rarfile module.
convert_rar_to_zip = yes

[matchers]
# List of possible matchers to use. Negative values disable that particular matcher.
# Positive values are sorted ascending in their use, so if the first one fails, the next one will try to match.
# Warning: some of them might be outdated.
pandatitle = 2
pandacover = 1
pandaimage = -1
googletitle = 3
nhentaititle = 4
prettyhentaititle = 5
fakkutitle = -1

[match_params]
# If set to yes, archives already matched that fit into "rematchfilelist" will be matched again.
rematchfile = no
# List of matchtypes that will be considered in a rematch.
rematchfilelist = non-match
# Rehash files for their CRC32.
rehashfiles = no
# If an archive with the same CRC32 is found, copy its matching info.
copymatchfile = yes

[locations]
# Absolute location in the filesystem where the media will be stored. Includes archives, thumbnails, and extracted archives.
media_root = 
# Relative location where hath downloads will be stored.
hath_dl_folder = galleries/hath_dls
# Relative location where archive downloads will be stored.
archive_dl_folder = galleries/archive_dls
# Relative location where torrent downloads will be stored.
torrent_dl_folder = galleries/torrent_dls
# Custom absolute location for the logfile. Can be commented to use the default folder.
# log_location = /home/panda/crawler.log

[urls]
# URLs for webserver
media_url = /media/
static_url = /static/
viewer_main_url =

[database]
# If mysql is the db_engine this parameters must be filled.
# mysql_name = pandawebfront
# mysql_user = pandaadmin
# mysql_password = pandaadmin
# mysql_host = localhost
# mysql_port = 3306
# If sqlite is the db_engine, this parameter can be filled, to use a custom absolute location.
# sqlite_location = /home/panda/panda.db
# If postgresql is the db_engine, this parameters must be filled.
# postgresql_name = pandaweb
# postgresql_user = pandaadmin
# postgresql_password = pandaadmin
# postgresql_host = localhost
# postgresql_port = 5432

[torrent]
# Parameters needed if using a torrent downloader to configure the connection to the torrent client. Possible clients: Transmission, uTorrent.
client = transmission
user = panda
pass = panda
address = http://localhost/transmission/rpc
port = 9091
# download_dir only implemented for transmission
download_dir = /home/panda/downloads/torrents

[ftps]
# Download files from the remote server, when using remote handler. Only option available is FTPS connection.
address = remote.server.com
user = panda
passwd = panda
# Where the torrent downloads are located on the remote server.
remote_torrent_dir = /home/pandaremote/downloads/torrent
# Where the hath downloads are located on the remote server.
remote_hath_dir = /hh/downloaded
# Where the hathdl files are uploaded on the remote server.
remote_hathdl_dir = /hh/hathdl
# If specified, address binded to when opening FTP connections to the remote server.
# bind_address = 

[webserver]
# Webserver information, if used.
bind_address = 0.0.0.0
bind_port = 8090
# Only needed if enable_ssl is yes.
# ssl_certificate = /home/panda/certs/panda.crt
# Only needed if enable_ssl is yes.
# ssl_private_key = /home/panda/certs/panda.key
# Enable SSL for all transmissions from the webserver.
enable_ssl = no

[remote_site]
# Used if two instances of this application are running, to communicate between them
api_url = https://panda.chaika.moe/jsonapi
api_key = asdf1234
remote_folder = /media/galleries/archives

[mail_logging]
# Some stuff will be reported to email. (Server Error, new gallery submissions.)
enable = no
mailhost =
from =
to =
subject =
username =
password =